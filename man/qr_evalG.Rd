% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qr_evalG.R
\name{qr_evalG}
\alias{qr_evalG}
\title{Evaluate the G matrix for a quantile regression model.}
\usage{
qr_evalG(y, X, alpha, Beta)
}
\arguments{
\item{y}{Length-\code{nObs} vector of responses.}

\item{X}{\code{nObs x nBet} matrix of covariates in the location function, where \code{nObs} is the number of observations and \code{nBet} is the dimension of coefficients in the location function.}

\item{alpha}{a vector of quantile levels.}

\item{Beta}{\verb{n_eqs x n_qts} matrix, each column is a vector of coefficients in location model.}
}
\value{
G matrix for location quantile regression model.
}
\description{
Evaluate the G matrix for a quantile regression model.
}
\details{
Assuming data were generated from\preformatted{y_i = x_i'beta + eps_i, for i = 1, ..., n,
}

where \code{eps_i}'s are ~iid \code{eps}, with \code{E[eps] = 0} and \code{Var[eps] = 1}.
Quantile regression estimates the alpha-level quantile of the response variable, i.e.,\preformatted{Q_alpha(y | x_i) = x_i'beta, for i = 1, ..., n.
}

where the 1st element of \code{x_i} is 1 and such that the 1st element of \code{beta} corresponds
to the \code{alpha}-level quantile of \code{eps}.
}
\examples{
n <- 20
p <- 4
X <- replicate(p, rnorm(n))
X[1,] <- rep(1,p)
beta <- rnorm(p)
alpha <- runif(1)
y <- c(X \%*\% beta) + rnorm(n) # with N(0,1) error term
qr_evalG(y, X, alpha, beta)
}
