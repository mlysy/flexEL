% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mr_evalG.R
\name{mr_evalG}
\alias{mr_evalG}
\title{Evaluate the G matrix for a mean regression model.}
\usage{
mr_evalG(y, X, beta)
}
\arguments{
\item{y}{Length-\code{nObs} vector of responses.}

\item{X}{\code{nObs x nBet} matrix of covariates in the location function, where \code{nObs} is the number of observations and \code{nBet} is the dimension of coefficients in the location function.}

\item{beta}{Length-\code{n_eqs} vector of coefficients in location model.}
}
\value{
G matrix for location mean regression model.
}
\description{
Evaluate the G matrix for a mean regression model.
}
\details{
Assuming data were generated from\preformatted{y_i = x_i \%*\% beta + eps_i, for i = 1, ..., n,
}

where \code{eps_i}'s are ~iid \code{eps}, with \code{E[eps] = 0} and \code{Var[eps] = 1}.
The estimating equations for \code{beta} can be derived based on the least squares method,
that is,\preformatted{min_beta t(y - X \%*\% beta) \%*\% (y - X  \%*\% beta)
}

The above minimization problem is equavalent to setting it's first derivative
w.r.t \code{beta} to 0, i.e.,\preformatted{t(X) \%*\% (y - X \%*\% beta) = 0
}

The left-hand-side of the above equation is the \code{G} matrix returned by this function.
}
\examples{
n <- 20
p <- 4
X <- replicate(p, rnorm(n))
beta0 <- rnorm(p)
y <- c(X \%*\% beta0) + rnorm(n) # with N(0,1) error term
mr_evalG(y, X, beta0)
}
