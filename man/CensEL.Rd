% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_CensEL.R
\name{CensEL}
\alias{CensEL}
\title{R6 Class for censored EL models.}
\description{
R6 Class for censored EL models.

R6 Class for censored EL models.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{n_obs}}{Number of observations.}

\item{\code{n_eqs}}{Number of equations.}

\item{\code{max_iter}}{Maximum number of EM iterations (positive integer).}

\item{\code{abs_tol}}{Absolute tolerance for terminating the EM algorithm (positive number).}

\item{\code{smooth_s}}{Indicator smoothing parameter.  A positive number, where \code{smooth_s = Inf} gives the regular indicator function.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CensEL-new}{\code{CensEL$new()}}
\item \href{#method-CensEL-set_opts}{\code{CensEL$set_opts()}}
\item \href{#method-CensEL-expected_weights}{\code{CensEL$expected_weights()}}
\item \href{#method-CensEL-clone}{\code{CensEL$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CensEL-new"></a>}}
\if{latex}{\out{\hypertarget{method-CensEL-new}{}}}
\subsection{Method \code{new()}}{
Check that \code{delta} is well specified.


Check that \code{epsilon} is well specified.


Check that \code{omega} is well specified.


Create a new \code{CensEL} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CensEL$new(gel, smooth_s = 10, max_iter = 10, abs_tol = 1e-07)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gel}}{A \code{GenEL} object.}

\item{\code{gel}}{A \code{GenEL} object.}

\item{\code{smooth_s}}{Indicator smoothing parameter (positive scalar).}

\item{\code{smooth_s}}{Indicator smoothing parameter (positive scalar).}

\item{\code{max_iter}}{Maximum number of EM iterations (positive integer).}

\item{\code{max_iter}}{Maximum number of EM iterations (positive integer).}

\item{\code{abs_tol}}{Absolute tolerance for EM algorithm termination (positive scalar).}

\item{\code{abs_tol}}{Absolute tolerance for EM algorithm termination (positive scalar).}

\item{\code{delta}}{Vector of censoring indicators.}

\item{\code{epsilon}}{Vector of residuals.}

\item{\code{omega}}{Vector of residuals.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CensEL-set_opts"></a>}}
\if{latex}{\out{\hypertarget{method-CensEL-set_opts}{}}}
\subsection{Method \code{set_opts()}}{
Set multiple options together.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CensEL$set_opts(smooth_s, max_iter, abs_tol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{smooth_s}}{Indicator smoothing parameter (positive scalar).}

\item{\code{smooth_s}}{Indicator smoothing parameter (positive scalar).}

\item{\code{max_iter}}{Maximum number of EM iterations (positive integer).}

\item{\code{max_iter}}{Maximum number of EM iterations (positive integer).}

\item{\code{abs_tol}}{Absolute tolerance for EM algorithm termination (positive scalar).}

\item{\code{abs_tol}}{Absolute tolerance for EM algorithm termination (positive scalar).}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Any number of these arguments can be supplied.  Those that are missing are not modified.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CensEL-expected_weights"></a>}}
\if{latex}{\out{\hypertarget{method-CensEL-expected_weights}{}}}
\subsection{Method \code{expected_weights()}}{
Calculate the expected weights in the EM algorithm.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CensEL$expected_weights(delta, epsilon, omega)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{delta}}{Censoring vector of length \code{n_obs}.  The method will attempt to coerce it to logicals.}

\item{\code{epsilon}}{Residual vector of length \code{n_obs}.}

\item{\code{omega}}{Probability vector of length \code{n_obs + supp_adj}.  Should contain positive scalars, and method will attempt to normalize it to sum to one.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
When \code{supp_adj = TRUE} it is assumed that \code{delta[n_obs+1] = FALSE} and \code{epsilon[n_obs+1] = -Inf}.
}

\subsection{Returns}{
Weight vector of length \code{n_obs + supp_adj}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CensEL-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CensEL-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CensEL$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
